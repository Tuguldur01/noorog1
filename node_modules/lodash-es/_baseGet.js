import castPath from './_castPath.js';
<<<<<<< HEAD
=======
import isKey from './_isKey.js';
>>>>>>> 5a88520246291938171233a829a6c8d57a25619b
import toKey from './_toKey.js';

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
<<<<<<< HEAD
  path = castPath(path, object);
=======
  path = isKey(path, object) ? [path] : castPath(path);
>>>>>>> 5a88520246291938171233a829a6c8d57a25619b

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

export default baseGet;
